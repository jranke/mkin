% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/saemix.R
\name{saemix_model}
\alias{saemix_model}
\alias{saemix_data}
\title{Create saemix models from mmkin row objects}
\usage{
saemix_model(object, cores = 1)

saemix_data(object, ...)
}
\arguments{
\item{object}{An mmkin row object containing several fits of the same model
to different datasets}

\item{cores}{The number of cores to be used for multicore processing using
\code{\link[parallel:mclapply]{parallel::mclapply()}}. Using more than 1 core is experimental and may
lead to uncontrolled forking, apparently depending on the BLAS version
used.}

\item{\dots}{Further parameters passed to \link[saemix:saemixData]{saemix::saemixData}}
}
\value{
An \link[saemix:SaemixModel-class]{saemix::SaemixModel} object.

An \link[saemix:SaemixData-class]{saemix::SaemixData} object.
}
\description{
This function sets up a nonlinear mixed effects model for an mmkin row
object for use with the saemix package. An mmkin row object is essentially a
list of mkinfit objects that have been obtained by fitting the same model to
a list of datasets.
}
\details{
Starting values for the fixed effects (population mean parameters, argument psi0 of
\code{\link[saemix:saemixModel]{saemix::saemixModel()}} are the mean values of the parameters found using
mmkin. Starting variances of the random effects (argument omega.init) are the
variances of the deviations of the parameters from these mean values.
}
\examples{
\dontrun{
library(saemix)
ds <- lapply(experimental_data_for_UBA_2019[6:10],
 function(x) subset(x$data[c("name", "time", "value")]))
names(ds) <- paste("Dataset", 6:10)
f_mmkin_parent_p0_fixed <- mmkin("FOMC", ds, cores = 1,
  state.ini = c(parent = 100), fixed_initials = "parent", quiet = TRUE)
m_saemix_p0_fixed <- saemix_model(f_mmkin_parent_p0_fixed["FOMC", ])
d_saemix_parent <- saemix_data(f_mmkin_parent_p0_fixed)
saemix_options <- list(seed = 123456, displayProgress = FALSE,
  save = FALSE, save.graphs = FALSE, nbiter.saemix = c(200, 80))
f_saemix_p0_fixed <- saemix(m_saemix_p0_fixed, d_saemix_parent, saemix_options)

f_mmkin_parent <- mmkin(c("SFO", "FOMC", "DFOP"), ds, quiet = TRUE)
m_saemix_sfo <- saemix_model(f_mmkin_parent["SFO", ])
m_saemix_fomc <- saemix_model(f_mmkin_parent["FOMC", ])
m_saemix_dfop <- saemix_model(f_mmkin_parent["DFOP", ])
d_saemix_parent <- saemix_data(f_mmkin_parent["SFO", ])
f_saemix_sfo <- saemix(m_saemix_sfo, d_saemix_parent, saemix_options)
f_saemix_fomc <- saemix(m_saemix_fomc, d_saemix_parent, saemix_options)
f_saemix_dfop <- saemix(m_saemix_dfop, d_saemix_parent, saemix_options)
compare.saemix(list(f_saemix_sfo, f_saemix_fomc, f_saemix_dfop))
f_mmkin_parent_tc <- update(f_mmkin_parent, error_model = "tc")
m_saemix_fomc_tc <- saemix_model(f_mmkin_parent_tc["FOMC", ])
f_saemix_fomc_tc <- saemix(m_saemix_fomc_tc, d_saemix_parent, saemix_options)
compare.saemix(list(f_saemix_fomc, f_saemix_fomc_tc))

dfop_sfo <- mkinmod(parent = mkinsub("DFOP", "A1"),
  A1 = mkinsub("SFO"))
f_mmkin <- mmkin(list("DFOP-SFO" = dfop_sfo), ds, quiet = TRUE)
m_saemix <- saemix_model(f_mmkin)
d_saemix <- saemix_data(f_mmkin)
f_saemix <- saemix(m_saemix, d_saemix, saemix_options)

}
}
